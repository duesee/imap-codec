name: Build & Test

on:
  push:
    branches: [ main ]
    paths:
      - '**.rs'
      - '**.toml'
      - '.github/workflows/**'
  pull_request:
    branches: [ main ]
    paths:
      - '**.rs'
      - '**.toml'
      - '.github/workflows/**'

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        # Use only Rust stable for now.
        rust: [ stable ]
        # Build imap-codec without any additional features or with all features.
        # That should suffice for now.
        features: [ "", "--all-features" ]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Install toolchain
        uses: actions-rs/toolchain@88dc2356392166efad76775c878094f4e83ff746
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check everything
        run: cargo check --workspace --all-targets ${{ matrix.features }}

      - name: Build everything
        if: matrix.os != 'windows-latest'
        run: cargo build --workspace --all-targets ${{ matrix.features }}

      # TODO: error: linking with `link.exe` failed: exit code: 1561
      - name: Build everything (w/o fuzzing)
        if: matrix.os == 'windows-latest'
        run: cargo build --workspace --all-targets ${{ matrix.features }} --exclude imap-codec-fuzz --exclude imap-types-fuzz

      - name: Test everything (w/o fuzzing)
        run: cargo test --workspace --all-targets ${{ matrix.features }} --exclude imap-codec-fuzz --exclude imap-types-fuzz

  audit:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Audit dependencies
        uses: EmbarkStudios/cargo-deny-action@7257a18a9c2fe3f92b85d41ae473520dff953c97

  lint:
    needs: audit
    runs-on: ubuntu-latest

    steps:
      - name: Install toolchain
        uses: actions-rs/toolchain@88dc2356392166efad76775c878094f4e83ff746
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: clippy

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check code formatting
        run: cargo fmt --all -- --check --config imports_granularity=Crate,group_imports=StdExternalCrate

      - name: Check for common mistakes and missed improvements
        uses: actions-rs/clippy-check@b5b5f21f4797c02da247df37026fcd0a5024aa4d
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features
